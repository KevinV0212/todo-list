Goal: Todo list app

Level 1 Description:
    App that houses different lists of todo items
    Can navigate between different lists on task bar
    Each list can add and delete todo items
    Each list has some information

Level 2 Description:
    How will the app house different lists of items?
        The app will have a module that contains a selection of objects
            Item object to represent each todo item
            List object to hold item objects

    How will the user's navigate through the lists?
        There will be buttons on the task bar that will open the list and adjust ui
    
    How will each list add and delete todo items?
        The list will have a button that asks questions about the new elemente

    What information does each item have? And which data type represents them
        title:string
        description: string
        due date: date object
        priority: string ('high', 'med', 'low')

Level 3 Description:
    What will go into the item objects?
        properties:
            title:string
            description: string
            due date: date object
            priority: string ('high', 'med', 'low')
        functions to interact with properties
            getters and setters for all of them
    
    What will go into the list objects?
        array of items
        functions to interact with array of items        // check if item with item.title already exists

            getter for array
            getter for array name
            add and delete items
            search for item

    How will the buttons open each list?
        buttons will have a data attribute that is the name of a list
        when clicked, the button will call an event listener that searches for 
        list with same name and render it

    How will will list add and delete todo items?
        add:
            bring up add item form
            add function will bring up a text box with fields for item information
            confirm button in text box will then call the an add funciton

        delete:
            button next to the element will call the delete element from list

Level 4 Descriptions:
    What will the add and delete functions take as arguments?
        add
            an item object
        delte
            the item title (linked with dom element and button);
        
    How will the program search for the name of the list?  How will the program then render the correct list
        The lists will be held in a named array. Pressing the button will call a 
        function that finds the list object with the same name as the one attached to the button.
        The function will then unrender the last list then render the new one.
    
    How will new lists be created and managed?
         todo will have an collection object factory that houses an array of lists
         lists will be added there.
         Note: this will only hold lists and do operations on lists

Level 5 questions: sp
    What will the collection moduels contain? split into collection object and transfer rest of utilities into ui handler
        Array for lists
        variable to track current list
        Function to return array of lists
        Function for adding lists
        Function for deleting lists
        Function for retrieving list
        Array for button dom elements navigate list
        Function that generates buttons based on lists
  
    How do I render the things on to the screen?
        Create a ui handler module to render ui and others

Level 6 questions:

    What do I need to render?
        Buttons (taskbar)
        current List
            each item in current list with info and delete button
        Delete and add list buttons

Level 7 questions:
    How do I render all of the buttons for list navigation?
        Go through the collection element, for each list in interanl array,
        Make a button and give it event listener to render the list

    Do I want to return elements, or just set them in function
        have the ui handler return as small of an component as possible
        then have a separate page handler for organizing all of the eleemnts

    How do I coordinate delete button to list
        in when creating each delete button, set a data attribute to the name of the list
        then when it is clicked, call delete list with current list then that attribute
        as the argument.

Level 8 questions:
    How do I track the current list
        Keep current list in as a member in the ui handler object
        then when a list is rendered, update it.

    What paremeters will the render button funciton get?
        an array of list objects (via colleciton.get lists)

    Can another layer be added to the rendering?
        maybe have one class render components, then another class call the methods of that class
        so like a producer then an assembler.


Level 9 questions:
    How are the responsibilities going to be handled?
        keep most of the functionality of the 'ui handler' in the componenet generator class and return componenets
        But then organize generated compnents in the assembler class
            also the buttons will have an effect on this layer so that the page can be rerender when necessary.

    How will the uiHandler update the stored lists?
        the uihandler will maintain an internal list collection.
        then when the event listeners are triggered, the internal collection will be
        updated with its methods

        Note: I was worried about having to navigate through layers of objects
        to add new list, but then I remembered, that all the ui changes would happen through the buttons,
        not the console so all of the navigation is baked into the ui handler.


Level 10 questions? 
    What order will things be loaded into the page?
        Header (optional), taskbar, then lists

    How are new items going to be loaded into the page
        for now, just reload everything completely, this is the easiest solution 

Level 11 questions?

    How will the page add items?
        have a form
            It will have each of the fields (title, desc, date, priority)
        give the form a add button that connects to a function that creates a new itemElement
            with all of the form info and adds it to current list
            unload list then reload list

    How will the page delete lists?
        Similarly to items, just add a delete button next to the each list in navbar
        then this time, unload and reload navbar

    How will the page add page
        add a add list button at the end of navbar
        then make add a small form for for the new list title and an add button
        add button will then take the list name, then craete a new list and add it to the navbar
        then reload the navbar