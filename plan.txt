import
1 Create Object module to hold information:
     What will go into the item objects?
        properties:
            title:string
            description: string
            due date: date object
            priority: string ('high', 'med', 'low')
        functions to interact with properties
            getters and setters for all of them
    
    What will go into the list objects?
        array of items
        functions to interact with array of items
            getter for array
            getter for array name
            add and delete items
                add: takes item object
                    Note: make checks to check if there is already an item with that title
                delete: takes item title
            search for index of item with a certain title


    what will go in the collection object?
        array of list
            getter for list array
            add list: takes list object
            delete list: takes list name
            search for list: takes title and returns list object[]

2 Create ui module to handle rendering elements
    What will go in the todoConverter object (translates to elements into dom elements)
        function to render item list: uses 'current' returns a list of item dom elements
            remember to add item delete buttons here.
        function to render each item: takes an item returns an item dom element
        function that 

    What will go into the uiHandeler object?
        generate nav buttons from a list list (from the collection class)
        function that renders entire page;
        function that reloads todolist
            renders current list variable
            
        function that reloads nav list
            creates a bunch button elements with event listeners to render list

        have a render list button that uses the object generator

        function to set currentList

3 How will the uiHandler delete items?
    save the rendered buttons into a variable
    then capture them with a document.querySelector('.item')
    then add a delete button that links to a unload item function
        also have current list remove the item that is the data-target of the delete button

4 How will the uiHandler create items?
    create a form that is absolutely placed in the center of the listWrapper
    give it a button that calls the addItem on current list and take all of the fields

5 Create delete list buttons
    go into render navbar function
    add new element that will wrap navBtn and a future delete button
    add a delete button that will delete _currentList from collection then reload list

6 create add list form
    pretty much just copy the idea of the create item form, but tone it down to one input
    create universal add button at the end of the navbar
        When clickign the button, a small form with new list name input will pop up
        that and an add button 
        After text input is done, the add button will have an event listener that
            adds the new item with newItem name to the collection.
            then just unload and reload the sidebar for the change

Note: forms should also have cancel buttons that just close the form. 

7 create cancel buttons for forms

8 styling.

9 Rorganize page due to design:
    Pull edit and add forms onto a modal 
    Reset styling to match design
    Add edit functionality
        copy the modals but add the buttons within the nav-entries and items in dom
        create info elements for forms
        add delete functionality to list edit

    
